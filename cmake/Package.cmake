# Package version
set(CPACK_PACKAGE_VERSION_MAJOR ${SILVERLOCK_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${SILVERLOCK_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${SILVERLOCK_VERSION_PATCH})
set(CPACK_PACKAGE_VERSION_BUILD ${SILVERLOCK_VERSION_BUILD})
set(CPACK_PACKAGE_VERSION ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}.${CPACK_PACKAGE_VERSION_BUILD})

# CPack variables...
set(CPACK_SYSTEM_NAME ${CMAKE_SYSTEM_NAME})
set(CPACK_PACKAGE_ICON "${CMAKE_SOURCE_DIR}/res/app.icns")
set(CPACK_PACKAGE_NAME ${SILVERLOCK_PACKAGE_NAME})
set(CPACK_PACKAGE_DESCRIPTION "${PROJECT_SUMMARY}")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "${PROJECT_SUMMARY} \n ${PROJECT_DESCRIPTION}")
set(CPACK_PACKAGE_VENDOR ${SILVERLOCK_VENDOR})
set(CPACK_PACKAGE_CONTACT ${SILVERLOCK_CONTACT})
set(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/README.md")
set(CPACK_RESOURCE_FILE_README "${CMAKE_SOURCE_DIR}/README.md")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/COPYING.md")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "${CMAKE_BINARY_DIR}/dist")

# Filename
string(TOLOWER ${CPACK_SYSTEM_NAME} OS_CODE)
if(APPLE)
    set(OS_CODE "osx")
endif()

set(TARGET_ARCH ${CMAKE_TARGET_ARCHITECTURES})
if(CMAKE_TARGET_ARCHITECTURE_UNIVERSAL)
    set(TARGET_ARCH "universal")
endif()

set(CPACK_PACKAGE_FILE_NAME "${SILVERLOCK_PACKAGE_PREFIX}-${SILVERLOCK_VERSION_SHORT}-${OS_CODE}-${TARGET_ARCH}")
set(CPACK_SOURCE_PACKAGE_FILE_NAME "${SILVERLOCK_PACKAGE_PREFIX}-${SILVERLOCK_VERSION_SHORT}-src")

set(CPACK_SOURCE_IGNORE_FILES ".git;.DS_Store;thumbs.db;CMakeLists.txt.user")

# Source package
if(WIN32)
    set(CPACK_SOURCE_GENERATOR "ZIP")
else()
    set(CPACK_SOURCE_GENERATOR "ZIP;TGZ;TBZ2")
endif()

if(WIN32 AND NOT UNIX)
    # NSIS doesn't handle paths properly so we need a set of 4 backslashes
    set(CPACK_PACKAGE_ICON "${CMAKE_SOURCE_DIR}/res\\\\app.png")
    set(CPACK_NSIS_INSTALLED_ICON_NAME "\\\\silverlock.exe")
    set(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} SILVERLOCK")
    set(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.petroules.com/silverlock")
    set(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.petroules.com/silverlock")
    set(CPACK_NSIS_CONTACT "${CPACK_PACKAGE_CONTACT}")
    set(CPACK_NSIS_MODIFY_PATH ON)
endif()

if(APPLE)
    set(CPACK_GENERATOR "DragNDrop")
    set(CPACK_COMPONENT_LIBRARIES_HIDDEN TRUE)

    #set(CPACK_DMG_DS_STORE "/Users/jakepetroules/Downloads/dmg_DS_Store")
    #set(CPACK_DMG_BACKGROUND_IMAGE "${CMAKE_SOURCE_DIR}/deploy/macx/dmg-background.png")
    set(CPACK_DMG_VOLUME_NAME "${SILVERLOCK_PACKAGE_NAME} ${SILVERLOCK_VERSION_SHORT}")
    set(CPACK_TOPLEVEL_TAG "dist")

    set(MACOSX_BUNDLE_BUNDLE_NAME "${SILVERLOCK_PACKAGE_NAME}")
    set(MACOSX_BUNDLE_BUNDLE_VERSION "${SILVERLOCK_VERSION_LONG}")
    set(MACOSX_BUNDLE_GUI_IDENTIFIER "${PROJECT_ID}")
    set(MACOSX_BUNDLE_INFO_STRING "${SILVERLOCK_PACKAGE_NAME} ${SILVERLOCK_VERSION_SHORT}")
    set(MACOSX_BUNDLE_LONG_VERSION_STRING "Version ${SILVERLOCK_VERSION_LONG}")
    set(MACOSX_BUNDLE_SHORT_VERSION_STRING "${SILVERLOCK_VERSION_SHORT}")
endif()

if(RPMBUILD_FOUND AND NOT WIN32)
    set(CPACK_GENERATOR "RPM")
    set(CPACK_RPM_PACKAGE_SUMMARY "${CPACK_PACKAGE_DESCRIPTION_SUMMARY}")
    set(CPACK_RPM_PACKAGE_NAME "${CPACK_PACKAGE_NAME}")
    set(CPACK_RPM_PACKAGE_VERSION "${SILVERLOCK_VERSION_LONG}")
    set(CPACK_RPM_PACKAGE_LICENSE "FreeBSD License")
    set(CPACK_RPM_PACKAGE_GROUP "${CPACK_PACKAGE_VENDOR}")
    set(CPACK_RPM_PACKAGE_VENDOR "${CPACK_PACKAGE_VENDOR}")
    set(CPACK_RPM_PACKAGE_DESCRIPTION "${PROJECT_DESCRIPTION}")
    set(CPACK_RPM_PACKAGE_DEPENDS "qt ( >= 4.6 ), qt-x11 ( >= 4.6 )")
    set(CPACK_SET_DESTDIR TRUE)
endif()

if(DPKG_FOUND AND NOT WIN32)
    set(CPACK_GENERATOR "DEB")
    set(CPACK_DEBIAN_PACKAGE_NAME ${CPACK_PACKAGE_NAME})
    set(CPACK_DEBIAN_PACKAGE_VERSION ${CPACK_PACKAGE_VERSION})
    set(CPACK_DEBIAN_PACKAGE_DESCRIPTION ${CPACK_PACKAGE_DESCRIPTION_SUMMARY})
    set(CPACK_DEBIAN_PACKAGE_MAINTAINER "${CPACK_PACKAGE_VENDOR} <${CPACK_PACKAGE_CONTACT}>")
    set(CPACK_DEBIAN_PACKAGE_PRIORITY "optional")
    set(CPACK_DEBIAN_PACKAGE_DEBUG ON)
    set(CPACK_DEBIAN_PACKAGE_DEPENDS ${PACKAGE_REQUIRES})
    set(CPACK_DEBIAN_PACKAGE_DEPENDS "libqt4-gui ( >= 4.6 ), libqt4-xml ( >= 4.6 )") # Specify dependencies here
    set(CPACK_SET_DESTDIR TRUE)
endif(DPKG_FOUND AND NOT WIN32)
